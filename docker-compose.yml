networks:
  personal-task-manager-network:
    driver: bridge
volumes:
  personal-task-manager-data:
  certbot-etc:
  certbot-var:

services:
  app:
    container_name: laravel.${APP_NAME}
    build:
      context: .
      dockerfile: ./docker/php-fpm/Dockerfile
    volumes:
      - .:/var/www/html
    working_dir: /var/www/html
    environment:
      - DB_HOST=mysql
      - DB_NAME=${DB_DATABASE}
      - DB_USER=${DB_USERNAME}
      - DB_PASS=${DB_PASSWORD}
      - DB_PORT=3306
    networks:
      - personal-task-manager-network
    depends_on:
      - mysql
    command: >
      sh -c "
      chown -R www-data:www-data /var/www/html/storage/ &&
      chmod -R 775 /var/www/html/storage/ &&
      php-fpm
      "
    restart: unless-stopped
    expose:
      - "9000"

  webserver:
    container_name: nginx.${APP_NAME}
    build:
      context: .
      dockerfile: ./docker/nginx/Dockerfile
    ports:
      - "80:80"
      - "443:443"
    networks:
      - personal-task-manager-network
    volumes:
      - .:/var/www/html
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
    depends_on:
      - app
    restart: unless-stopped

  mysql:
    container_name: mysql.${APP_NAME}
    build:
      context: .
      dockerfile: ./docker/mysql/Dockerfile
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER:     ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    ports:
      - "3306:3306"
    networks:
      - personal-task-manager-network
    volumes:
      - personal-task-manager-data:/var/lib/mysql/
    restart: unless-stopped

  node:
    container_name: node.${APP_NAME}
    build:
      context: .
      dockerfile: ./docker/node/Dockerfile
    ports:
      - "5173:5173"
    networks:
      - personal-task-manager-network
    volumes:
      - .:/var/www/html
      - certbot-etc:/etc/letsencrypt
    working_dir: /var/www/html
    environment:
      - APP_ENV=${APP_ENV}
    restart: unless-stopped
    tty: true

  redis:
    container_name: redis.${APP_NAME}
    build:
      context: .
      dockerfile: ./docker/redis/Dockerfile
    ports:
      - "6379:6379"
    networks:
      - personal-task-manager-network
    volumes:
      - .:/var/www/html
    working_dir: /var/www/html
    restart: unless-stopped

  certbot:
    container_name: certbot.${APP_NAME}
    build:
      context: .
      dockerfile: ./docker/certbot/Dockerfile
    profiles:
      - tools
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - ./public:/var/www/html/public
    tty: true
    # command: certonly --webroot --webroot-path=/var/www/html/public --email ${CERTBOT_TLS_CERTIFICATE_EMAIL} --agree-tos --no-eff-email -d ${APP_URL}
